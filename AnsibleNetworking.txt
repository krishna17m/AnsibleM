Using username "Sriram1".
Error writing session log (raw mode) to file: C:\putty.log\ 18.156.38.139-202005                                                                                        04-130256.log
Sriram1@18.156.38.139's password:
Last login: Mon May  4 06:22:11 2020 from 203.192.241.69
[Sriram1@ansible ~]$
[Sriram1@ansible ~]$ $ ansible --version^C
[Sriram1@ansible ~]$  ansible --version
ansible 2.7.0
  config file = /home/Sriram1/.ansible.cfg
  configured module search path = [u'/home/Sriram1/.ansible/plugins/modules', u                                                                                        '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python2.7/site-packages/ansible
  executable location = /usr/bin/ansible
  python version = 2.7.5 (default, Mar 26 2019, 22:13:06) [GCC 4.8.5 20150623 (R                                                                                        ed Hat 4.8.5-36)]
[Sriram1@ansible ~]$ cat /home/Sriram1/.ansible.cfg
[defaults]
stdout_callback = yaml
connection = smart
timeout = 60
deprecation_warnings = False
host_key_checking = False
retry_files_enabled = False
inventory = /home/Sriram1/networking-workshop/lab_inventory/hosts
[persistent_connection]
connect_timeout = 60
command_timeout = 60
[Sriram1@ansible ~]$ cat  /home/Sriram1/networking-workshop/lab_inventory/hosts
[all:vars]
ansible_ssh_private_key_file=/home/Sriram1/.ssh/aws-private.pem
[routers:children]
cisco

[cisco]
rtr1 ansible_host=18.185.86.35 private_ip=172.16.108.225
rtr2 ansible_host=3.121.85.126 private_ip=172.17.18.192
rtr3 ansible_host=18.196.63.102 private_ip=172.16.133.184
rtr4 ansible_host=18.185.106.53 private_ip=172.17.227.245


[cisco:vars]
ansible_user=ec2-user
ansible_network_os=ios
ansible_connection=network_cli


[dc1]
rtr1
rtr3

[dc2]
rtr2
rtr4

[hosts]
host1 ansible_host=35.157.121.16 ansible_user=ec2-user private_ip=172.17.139.5

[control]
ansible ansible_host=18.156.38.139 ansible_user=Sriram1 private_ip=172.16.180.110
[Sriram1@ansible ~]$ ansible all --list-hosts
  hosts (6):
    rtr1
    rtr3
    ansible
    rtr2
    rtr4
    host1
[Sriram1@ansible ~]$ ansible rtr1 -m ping
rtr1 | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
[Sriram1@ansible ~]$ ansible rtr1 -m ping -c network_cli
rtr1 | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
[Sriram1@ansible ~]$ vim backup.yml
[Sriram1@ansible ~]$ vim backup.yml
[Sriram1@ansible ~]$ ansible-playbook backup.yml

PLAY [Gather facts from Cisco routers] *********************************************************************************************************************************

TASK [Gather router facts] *********************************************************************************************************************************************
ok: [rtr3]
ok: [rtr2]
ok: [rtr4]
ok: [rtr1]

TASK [Display version] *************************************************************************************************************************************************
ok: [rtr2] =>
  msg: 'The IOS version is: 16.09.02'
ok: [rtr3] =>
  msg: 'The IOS version is: 16.09.02'
ok: [rtr1] =>
  msg: 'The IOS version is: 16.09.02'
ok: [rtr4] =>
  msg: 'The IOS version is: 16.09.02'

TASK [Display serial number] *******************************************************************************************************************************************
ok: [rtr2] =>
  msg: The serial number is:9X213ZEY5UP
ok: [rtr1] =>
  msg: The serial number is:979CEOD9H5F
ok: [rtr4] =>
  msg: The serial number is:908ZEP1VNRU
ok: [rtr3] =>
  msg: The serial number is:9AGNVQBFSMZ

PLAY RECAP *************************************************************************************************************************************************************
rtr1                       : ok=3    changed=0    unreachable=0    failed=0
rtr2                       : ok=3    changed=0    unreachable=0    failed=0
rtr3                       : ok=3    changed=0    unreachable=0    failed=0
rtr4                       : ok=3    changed=0    unreachable=0    failed=0

[Sriram1@ansible ~]$ ansible cisco -m ios_command -a "commands='sh banner motd'" -c network_cli
rtr4 | SUCCESS => {
    "changed": false,
    "stdout": [
        ""
    ],
    "stdout_lines": [
        [
            ""
        ]
    ]
}
rtr1 | SUCCESS => {
    "changed": false,
    "stdout": [
        ""
    ],
    "stdout_lines": [
        [
            ""
        ]
    ]
}
rtr2 | SUCCESS => {
    "changed": false,
    "stdout": [
        ""
    ],
    "stdout_lines": [
        [
            ""
        ]
    ]
}
rtr3 | SUCCESS => {
    "changed": false,
    "stdout": [
        ""
    ],
    "stdout_lines": [
        [
            ""
        ]
    ]
}
[Sriram1@ansible ~]$ ansible cisco -m ios_config -a "lines='banner motd % Ansible Foundation Router %'" -c network_cli
rtr3 | CHANGED => {
    "banners": {},
    "changed": true,
    "commands": [
        "banner motd % Ansible Foundation Router %"
    ],
    "updates": [
        "banner motd % Ansible Foundation Router %"
    ]
}
rtr4 | CHANGED => {
    "banners": {},
    "changed": true,
    "commands": [
        "banner motd % Ansible Foundation Router %"
    ],
    "updates": [
        "banner motd % Ansible Foundation Router %"
    ]
}
rtr1 | CHANGED => {
    "banners": {},
    "changed": true,
    "commands": [
        "banner motd % Ansible Foundation Router %"
    ],
    "updates": [
        "banner motd % Ansible Foundation Router %"
    ]
}
rtr2 | CHANGED => {
    "banners": {},
    "changed": true,
    "commands": [
        "banner motd % Ansible Foundation Router %"
    ],
    "updates": [
        "banner motd % Ansible Foundation Router %"
    ]
}
[Sriram1@ansible ~]$ ansible cisco -m ios_command -a "commands='sh banner motd'" -c network_cli
rtr2 | SUCCESS => {
    "changed": false,
    "stdout": [
        "Ansible Foundation Router"
    ],
    "stdout_lines": [
        [
            "Ansible Foundation Router"
        ]
    ]
}
rtr3 | SUCCESS => {
    "changed": false,
    "stdout": [
        "Ansible Foundation Router"
    ],
    "stdout_lines": [
        [
            "Ansible Foundation Router"
        ]
    ]
}
rtr1 | SUCCESS => {
    "changed": false,
    "stdout": [
        "Ansible Foundation Router"
    ],
    "stdout_lines": [
        [
            "Ansible Foundation Router"
        ]
    ]
}
rtr4 | SUCCESS => {
    "changed": false,
    "stdout": [
        "Ansible Foundation Router"
    ],
    "stdout_lines": [
        [
            "Ansible Foundation Router"
        ]
    ]
}
[Sriram1@ansible ~]$ ansible-doc ios_config
> IOS_CONFIG    (/usr/lib/python2.7/site-packages/ansible/modules/network/ios/ios_config.py)

        Cisco IOS configurations use a simple block indent file syntax for segmenting configuration into sections.  This module
        provides an implementation for working with IOS configuration sections in a deterministic way.

  * note: This module has a corresponding action plugin.

OPTIONS (= is mandatory):

- after
        The ordered set of commands to append to the end of the command stack if a change needs to be made.  Just like with `before'
        this allows the playbook designer to append a set of commands to be executed after the command set.
        [Default: (null)]

- auth_pass
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli' and `become: yes' with `become_pass'.
        For more information please see the L(IOS Platform Options guide, ../network/user_guide/platform_ios.html).
        HORIZONTALLINE
        Specifies the password to use if required to enter privileged mode on the remote device.  If `authorize' is false, then this
        argument does nothing. If the value is not specified in the task, the value of environment variable `ANSIBLE_NET_AUTH_PASS'
        will be used instead.
        [Default: (null)]

- authorize
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli' and `become: yes'.
        For more information please see the L(IOS Platform Options guide, ../network/user_guide/platform_ios.html).
        HORIZONTALLINE
        Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device
        will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of
        environment variable `ANSIBLE_NET_AUTHORIZE' will be used instead.
        [Default: no]
        type: bool

- backup
        This argument will cause the module to create a full backup of the current `running-config' from the remote device before any
        changes are made.  The backup file is written to the `backup' folder in the playbook root directory or role root directory, if
        playbook is part of an ansible role. If the directory does not exist, it is created.
        [Default: no]
        type: bool
        version_added: 2.2

[Sriram1@ansible ~]$ vim banner.txt
[Sriram1@ansible ~]$ vim motd.yml
[Sriram1@ansible ~]$ ansible-playbook motd.yml --limit rtr1,rtr2

PLAY [Update banner message] *******************************************************************************************************************************************

TASK [Update banner message from file] *********************************************************************************************************************************
changed: [rtr1]
changed: [rtr2]

PLAY RECAP *************************************************************************************************************************************************************
rtr1                       : ok=1    changed=1    unreachable=0    failed=0
rtr2                       : ok=1    changed=1    unreachable=0    failed=0

[Sriram1@ansible ~]$ ansible cisco -m ios_command -a "commands='sh banner motd'" -c network_cli --limit rtr1,rtr4
rtr4 | SUCCESS => {
    "changed": false,
    "stdout": [
        "Ansible Foundation Router"
    ],
    "stdout_lines": [
        [
            "Ansible Foundation Router"
        ]
    ]
}
rtr1 | SUCCESS => {
    "changed": false,
    "stdout": [
        "Banner message from file"
    ],
    "stdout_lines": [
        [
            "Banner message from file"
        ]
    ]
}
[Sriram1@ansible ~]$
[Sriram1@ansible ~]$
[Sriram1@ansible ~]$
[Sriram1@ansible ~]$
[Sriram1@ansible ~]$
